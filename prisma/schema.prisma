// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int             @id @default(autoincrement())
  username         String          @unique
  email            String
  password         String
  firstName        String
  lastName         String
  address          String?
  role             String          @default("user")
  verified         Boolean         @default(false)
  otp              String?
  otpExpiration    DateTime?
  createdAt        DateTime        @default(now())
  companyId        Int?
  companies        UserToCompany[]
  createdCompanies Company[]       @relation("CreatedCompanies")
}

model Invitation {
  id        Int      @id @default(autoincrement())
  email     String
  role      String
  token     String   @unique
  companyId Int?
  expiresAt DateTime
  createdAt DateTime @default(now())
  company   Company? @relation(fields: [companyId], references: [id])
}

model Company {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  slug            String    @unique
  website         String?
  email           String?
  phone           String?
  address         String?
  city            String?
  state           String?
  country         String?
  logo            String?
  description     String?
  foundedAt       DateTime?
  industry        String?
  size            String?
  isActive        Boolean   @default(true)
  createdBy       User?     @relation("CreatedCompanies", fields: [createdByUserId], references: [id])
  createdByUserId Int?

  users      UserToCompany[]
  Invitation Invitation[]
}

model UserToCompany {
  id        Int     @id @default(autoincrement())
  userId    Int
  companyId Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  company   Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@unique([userId, companyId])
}
